name: CI/CD

on:
    push:
    pull_request:

env:
    COMPOSER_DISABLE_XDEBUG_WARN: "1"

jobs:
    build:
        name: Build and test
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
                with:
                    fetch-depth: 0
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '7.4'
                    extensions: json
                    tools: composer
            -   run: composer update
            -   run: |
                    composer validate
                    ./vendor/bin/phpcs -s .
                    ./bin/console lint:twig ./templates
                    ./bin/console lint:yaml ./config
                    ./vendor/bin/minus-x check .
                    ./bin/phpunit --exclude-group=integration
    build_image:
        name: Build Docker image
        runs-on: ubuntu-latest
        needs: build
        strategy:
            matrix:
                targets:
                    - name: production
                      tag: wikimedia/copypatrol
                    - name: development
                      tag: wikimedia/copypatrol-development
        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v1

            -   name: Set up Docker Buildx
                id: buildx
                uses: docker/setup-buildx-action@v1

            - name: Build image
              id: docker_build
              uses: docker/build-push-action@v2
              with:
                  context: .
                  target: ${{ matrix.targets.name }}
                  tags: ${{ matrix.targets.tag }}:latest
                  outputs: type=docker,dest=/tmp/copypatrol-${{ matrix.targets.name }}.image.tar
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Image digest
              run: echo ${{ steps.docker_build.outputs.digest }}

            - name: Upload Docker image to artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: image-${{ matrix.targets.name }}
                  path: /tmp/copypatrol-${{ matrix.targets.name }}.image.tar
    analysis:
        name: Analyze Docker images
        runs-on: ubuntu-latest
        needs: build_image
        strategy:
            matrix:
                targets:
                    - name: production
                      tag: wikimedia/copypatrol
                    - name: development
                      tag: wikimedia/copypatrol-development

        steps:
            - name: Download Docker image from artifacts
              uses: actions/download-artifact@v2
              with:
                  name: image-${{ matrix.targets.name }}
                  path: /tmp

            - name: Load image
              run: |
                  docker load --input /tmp/copypatrol-${{ matrix.targets.name }}.image.tar
                  docker image ls -a
            - name: Dive
              uses: yuichielectric/dive-action@0.0.4
              with:
                  image: ${{ matrix.targets.tag }}:latest
                  github-token: ${{ secrets.GITHUB_TOKEN }}
